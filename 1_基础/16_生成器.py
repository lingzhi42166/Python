""" 
  概念和js的Generator类似
"""

def f():
  a,b = 1,1
  print(1)
  yield a

a = f()
print(a.__next__())

""" 
  生成器推导式
    和列表推导式类似
    只是生成器推导式使用圆括号()
    列表推导式使用中括号[]

    生成推导式返回的是一个生成器对象
    可以通过生成器对象的__next__方法  或者内置函数next(g) 进行遍历生成器对象元素
    也可以根据需求 将生成器对象转换为列表或元组


    注意生成器对象就相当于一个函数 执行一次next 碰到yield表达式就暂停 并返回表达式的状态 也就是跟在后面的值
    再次执行就从上次暂停的地方继续
    所以遍历生成器对象 当遍历完成之后  就必须重新创建该生成器对象 因为当前的生成器对象已经被遍历完了 没有下一个yield了
"""
g = (i+1 for i in range(10))
print(g)

print(g.__next__())  #访问了一个元素

l = tuple(g) # 因为上面已经访问了一个元素 所以这里从第二个元素开始遍历 
print(l)

# print(g.__next__())


# x = list(g)
# print(x)
