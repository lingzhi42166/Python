""" 
  python采用的是基于值的内存管理方式  如果为不同变量赋值为相同的值  那么变量指向的是同一块内存地址
  也正是此特性  变量类型可以随时改变 本质就是执行不同的内存地址

  动态的内存占用请求 会在内存堆中 划分一块地址给用户
  举例来说，用户要求得到10个字节内存，那么从起始地址0x1000开始给他分配，一直分配到地址0x100A 再把内存地址赋值给变量
  那么变量 指向的就是这块内存地址
  
  python具有自动内存管理功能(垃圾回收机制)
  对于没有变量指向的值，python自动将其删除。
  也就是说python会自动跟踪所有的值，并自动删除没有被变量指向的值


  通过内置函数id() 得到变量值的内存地址  换言之 变量保存的只是地址  id()返回的是  内存地址计算后的一串数字 内存地址并不是这种形式

  通过 is  判断变量ID是否相等
  x is y 

  == 判断值是否相等  数据类型也必须一样


  引用计数
    只要没有变量指向这个值 就会被回收
    引用计数 是有问题的 可以看红宝书

"""

# x = 123
# y = x
# print(id(x),id(y))

# print(x is y)

x = 1
y = 1
print(id(x),id(y))

print(x is y)


x = 1
# y = "1"   
y = 1
print(x == y)
