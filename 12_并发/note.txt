进程:
  一个程序运行的载体
  虚拟概念=>代表一个正在运行的程序
  进程是懒惰的，本身不是可执行的单元，主要是线程的容器。
  要使进程地址空间中的代码运行起来，必须至少有一个环境运行代码的执行单元(线程)
  一个进程被创建时，系统会自动为之建立一个线程，称之为主线程
线程:
  操作系统调度和分配处理器时间的基本单位，负责执行进程地址中的代码
  运行代码的执行单元
  一个进程可以有多个线程，主线程根据需要自动创建其他子线程
  线程之间数据共享(共享进程的地址空间)

白话文:
  进程就是一个工厂，线程就是这个工厂里的工人
  工厂占用的地方 就是内存分配的地址   
  所以进程其实就是一块内存空间
  


并发:
  多个程序看起来像是同时运行 伪并行
并行:
  真正意义的多个程序同时运行


解决高速主机和慢速外设的矛盾
  单道(同步):
    CPU处理速度非常快，相对于CPU的处理速度而言，硬盘和内存读取的速度太慢了，以至于IO操作的时候,CPU是大部分时间处于闲置状态
  多道(异步):
    把A和B程序都读入内存中
    当A程序进入IO操作的时候，就会让出CPU的控制权，处理B程序，当B进入IO的时候，如果A的IO操作结束则接着处理A
   （1）多道：计算机内存中同时存放几道相互独立的程序；
　　（2）宏观上并行：同时进入系统的几道程序都处于运行过程中，即它们先后开始了各自的运行，但都未运行完毕；
　　（3）微观上串行：实际上，各道程序轮流地用CPU，并交替运行。


僵尸进程
  子进程退出，而父进程并没有调用wait或waitpid获取子进程的状态信息，那么子进程的进程描述符仍然保存在系统中
  通俗来讲:
    没死透
孤儿进程:
  一个父进程退出，而它的一个或多个子进程还在运行，那么那些子进程将成为孤儿进程。孤儿进程将被init进程(进程号为1)所收养，并由init进程对它们完成状态收集工作。
  通俗来讲:
    就是个孤儿 父进程被杀了
守护进程:
  子进程随着父进程生死   (父进程就是整个代码运行的进程 进程结束 也就是代码执行完毕)
  p.daemon = true  



进程创建 是会copy一份代码到子进程打开的python解释器中执行  所以每个子进程的作用域都不一样 不要直接使用全局变量作数据通信
跟http://c.biancheng.net/view/2633.html上面讲的不一样  没有查到最真实的答案  


函数内部对变量的赋值操作 默认是在局部作用域的  所以想要对全局作用域的变量进行修改赋值 则必须通过global 声明该变量为全局作用域 相当于在局部作用域中把该变量的指针指向全局作用域的变量的内存地址
如果只是查询 则不需要